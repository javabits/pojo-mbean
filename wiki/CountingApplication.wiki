#summary A small sample application that shows how to MBean enable an existing application

= CountingApplication.java =

{{{
@MBean(objectName = "org.softee:type=Demo,name=CountingApplication")
@Description("This Java application shows what is required expose a RW int property as an MBean")
public class CountingApplication implements Callable<Object> {
    /**
     * The counter that is made visible to both application and Management Agent (JConsole / JMX console)
     */
    private final AtomicInteger counter;

    public CountingApplication() throws ManagementException, MalformedObjectNameException {
        counter = new AtomicInteger();
        System.out.println("Registering MBean");
        /* in a "real" application, the registration instance would probably be
         * saved in a field for subsequent unregistration */
        new MBeanRegistration(this).register();
    }

    public static void main(String[] args) throws Exception {
        new CountingApplication().call();
    }

    @Override
    public Object call() throws Exception {
        for (;;) {
            System.out.println("counter = " + getCounter());
            incrementCounter(1);
            Thread.sleep(1000); // one second
        }
    }

    @ManagedAttribute @Description("A counter variable")
    public int getCounter() {
        return counter.get();
    }

    @ManagedAttribute
    public void setCounter(int counter) {
        this.counter.set(counter);
    }

    @ManagedOperation(Impact.ACTION_INFO)
    @Description("Increments the counter by the requested amount and shows the resulting value")
    public int incrementCounter(
            @Parameter("amount") @Description("The amount to increment the counter with") int delta) {
        return counter.addAndGet(delta);
    }

    @ManagedOperation(Impact.ACTION) @Description("Resets the counter")
    public void reset() {
        counter.set(0);
    }
}
}}}